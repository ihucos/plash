#!/bin/sh
set -exu
# build container 2 and 3
plash build --from id 1 --polute

: A simple invocation succeeds
plash clean

: $PLASH_DATA/index is cleaned up
out_before=$(ls "$PLASH_DATA"/index)
plash rm 2
plash clean
out_after=$(ls "$PLASH_DATA"/index)
test "$out_before" != "$out_after"

: $PLASH_DATA/map is cleaned up
cont=$(plash build --from id 1 --polute)
plash map key1 "$cont"
plash map key2 "$cont"
plash map key3 "$cont"
out=$(ls "$PLASH_DATA"/map)
echo "$out" | grep key1
echo "$out" | grep key2
echo "$out" | grep key3
plash rm 3  # delete the container the maps are referencing to
plash clean --clean-cache-keys
out=$(ls "$PLASH_DATA"/map/)
test "$out" = ""

: $PLASH_DATA/tmp is cleaned up
out=$(ls "$PLASH_DATA"/tmp)
test "$out" = "" # assert empty tmp
plash build --from id 1
plash this run true
out=$(ls "$PLASH_DATA"/tmp)
echo "$out" | grep plashtmp # assert output contains plashtmp
plash clean --clean-tmp
out=$(ls "$PLASH_DATA"/tmp)
test "$out" = "" # assert empty tmp

: Unexpected files n $PLASH_DATA do not lead to crash
touch "$PLASH_DATA"/index/mybadfile
touch "$PLASH_DATA"/map/mybadfile
touch "$PLASH_DATA"/tmp/mybadfile
mkdir "$PLASH_DATA"/tmp/mybaddir
plash clean
