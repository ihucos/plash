

=================
= STILL A DRAFT =
=================

Keep the script charachter.
Don't fall in love with the code, embrace its absence.
Don't be a monolothit but don't try too hard not to be one.
Honest thin wrappers, documented leaky abstractions are better then difficult promises
Only be as smart as neccesary and keep it simple and stupid (KISS)
Say no to features, say yes to solved used cases.
The right three tools for the right job.
Find out what this program is and especially what it not is.
Delay compromisses.
Be as vanilla as you can be.

Make using it feel good.
Even the geek user does not care, it should just work.
Programm this for someone you know, yourself is also fine.

Still be able to run this in five years without any maintance work.
high-level goal: user experience and maintability, maybe compability.
The right guidelines for the right situation.
All dependencies will get unmaintained at some point


NEW ONES:
For every functionality there is one path of execution and one unit test.
Be humble, don't oversell your abstraction layer.
