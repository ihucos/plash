#!/usr/bin/env plash-exec
# plash-exec: exec=/entrypoint
--image
ubuntu
--apt
python3-setuptools
python3-pip
python3-coverage
python3-jinja2
git
twine
--layer
--write-script
/entrypoint
#!/bin/sh
set -eux

# if not TRAVIS set running local, just... make it work a little bit for testing
if test -n ${TRAVIS:-}; then
  num=$(date +'%s')
  version=0.0.$num
  test=yes
  TRAVIS_BRANCH=master
else
  version=0.$TRAVIS_BUILD_NUMBER
fi

test -n "${TRAVIS:-}" && sed -i -e "s/VERSION = '0.1dev'/VERSION = "$version"/g" setup.py
python3 setup.py --quiet develop

for f in /usr/lib/python3.*; do
  cp ./misc/sitecustomize_for_codecoverage/sitecustomize.py $f
done
covtmp=$(mktemp -d)
cp .coveragerc $covtmp
echo "data_file=${PWD}/.coverage" >> $covtmp/.coveragerc
export COVERAGE_PROCESS_START=$covtmp/.coveragerc
python3 -m coverage erase
cd /
plash init
plash test
cd - 2> /dev/null
rm /usr/lib/python3.*/sitecustomize.py

python3 -m coverage combine
python3 -m coverage report

if test $TRAVIS_BRANCH = master; then
    misc/mkdocs
    python3 -m coverage html --directory ./docs/htmlcov 
    
    git checkout -B ci-work-branch || exit 1
    git add docs
    git add -f docs/htmlcov
    git commit -m 'deploy docs [skip ci]' --allow-empty
    git push https://${GH_TOKEN}@github.com/ihucos/plash-docs-deploy.git HEAD:master --force
    
    # upload to pypi. maybe in a better future we
    # don't need the autogenerated config anymore
    python3 setup.py --quiet bdist_wheel
    tmp=$(mktemp)
    echo '[distutils]' >> $tmp
    echo 'index-servers=pypi' >> $tmp
    echo '[pypi]' >> $tmp
    if test "$test"=yes; then
       echo 'repository=https://test.pypi.org/legacy/' >> $tmp
    else
       echo 'repository=https://pypi.org/legacy/' >> $tmp
    fi
    twine upload --config-file $tmp -r pypi -u $PYPI_USER -p $PYPI_PASSWORD dist/*
    
    # publish a release (a git tag)
    git tag "$version" -m "https://test.pypi.org/project/plash/$version"
    git push https://${GH_TOKEN}@github.com/ihucos/plash.git --tags
fi
