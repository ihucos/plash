#!/usr/bin/env python3
#
# usage: plash-init
# Initialize build data. Run this on a new system before anything else.

from plashlib.utils import handle_help_flag, hashstr
from plashlib import ux
import os
from os.path import join

handle_help_flag()
ux.assert_is_root()

plash_data = os.environ.get('PLASH_DATA', '/var/lib/plash')
os.makedirs(plash_data, exist_ok=True)
os.chmod(plash_data, 0o755)

os.makedirs(join(plash_data, 'index'), exist_ok=True, mode=0o755)
os.makedirs(join(plash_data, 'cache_keys'), exist_ok=True, mode=0o755)
os.makedirs(join(plash_data, 'layers'), exist_ok=True, mode=0o755)
os.makedirs(join(plash_data, 'tmp'), exist_ok=True, mode=0o700)

# create the empty root container
os.makedirs(join(plash_data, 'layers', '0', '_data', 'root'), exist_ok=True)

try:
    with open(join(plash_data, 'id'), 'x') as f:
        f.write(hashstr(os.urandom(128)))
except FileExistsError:
    pass

try:
    os.symlink(join(plash_data, 'layers', '0'), join(plash_data, 'index', '0'))
except FileExistsError:
    pass
