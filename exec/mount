#!/usr/bin/env python3
#
# usage: plash mount CONTAINER MOUNTPOINT [ CHANGESDIR ]
#
# Mount a container-filesystem. To cleanup you need to unmount it manually.
# Changes to the filesystem will be written to CHANGESDIR, if ommited a
# temporary directory will be used.

import os
import shutil
import sys
from os.path import join
from subprocess import CalledProcessError, check_call

from plash import utils

utils.assert_initialized()

try:
    container, mountpoint = sys.argv[1:3]
    if len(sys.argv) >= 4:
        changedir = sys.argv[3]
    else:
        changedir = None
except ValueError:
    utils.die_with_usage()

nodepath = utils.plash_call("nodepath", container)

container_ids_path = []
parts = nodepath.split("/")
while True:
    pop = parts.pop()
    container_ids_path.append(pop)
    if pop == "0":
        break

# use the symlinks and not the full paths because the arg size is limited
# On my setup i get 58 (EDIT: should be more now) layers before an error,
# we could have multiple mount calls to overcome this
plash_data = utils.plash_call("data")
lowerdir_list = [
    join(plash_data, "index", i, "_data", "root") for i in container_ids_path
]


def check_mount_option_part(dir):
    if (
        dir
        and not dir.replace(".", "")
        .replace("/", "")
        .replace("_", "")
        .replace("-", "")
        .isalnum()
    ):
        utils.die(
            "cowardly dying: bad char(s) in unionfs-fuse/overlay arg: {}".format(dir)
        )


for l in lowerdir_list:
    check_mount_option_part(l)
check_mount_option_part(changedir)

if changedir:
    workdir = os.path.join(changedir, "work")
    upperdir = os.path.join(changedir, "data")
    os.makedirs(workdir, exist_ok=True)
    os.makedirs(upperdir, exist_ok=True)
else:
    workdir = None
    upperdir = None
with utils.catch_and_die([CalledProcessError, FileNotFoundError]):
    check_call(
        [
            "mount",
            "-t",
            "overlay",
            "overlay",
            "-o",
            "lowerdir={lowerdir}{workdir}{upperdir}".format(
                lowerdir=":".join(lowerdir_list),
                upperdir=",upperdir=" + upperdir if upperdir else "",
                workdir=",workdir=" + workdir if workdir else "",
            ),
            mountpoint,
        ],
        stdout=2,
    )
