#!/usr/bin/env python3

from plash import utils
from ctypes import *
import sys
import shlex


pl_handle_build_args = utils.lib.pl_handle_build_args

def test(plashcmd, expected):

    expected = shlex.split(expected)
    expected = [i.encode() for i in expected]

    argv = shlex.split(plashcmd)
    argv = [i.encode() for i in argv]
    argv += [None]

    argc = len(argv) - 1  # -1 because last value is NULL
    argc = POINTER(c_int)(c_int(argc))
    array = (c_char_p * (len(argv)))(*argv)
    
    pl_handle_build_args(argc, array)
    
    result = array[:]
    null_termination_index = result.index(None)
    result = result[:null_termination_index]
    new_argc = argc.contents.value

    assert len(result) == new_argc, "new argc is {} but is expected to be {}".format(new_argc, len(result))
    assert result == expected, "expected: {}; result: {}".format(expected, result)
    print()

test(
"foo -f 1",
"foo 1")

test(
"foo",
"foo")

test(
"foo -f 1 --invalidate-layer",
"foo 2")

test(
"foo --",
"foo"
)
test(
"foo -- --",
"foo --")

test(
"foo -- one two",
"foo one two")

test(
"foo -- --one --two",
"foo --one --two")

test(
"foo -f 1 -- one two",
"foo 1 one two"
)

test(
"--",
"--")

test(
"foo 1 2 3 4",
"foo 1 2 3 4"
)
