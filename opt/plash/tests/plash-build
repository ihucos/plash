#!/bin/bash
set -xeu

fresh(){
    plash build -f 1 --invalidate-layer
}

: can build a fresh fresh container
fresh

: build a layer and check it contain changes
cont=$(fresh)
newcont=$(plash build -f $cont -x 'touch /hellow')
plash run $newcont stat /hellow

: simple cache test
cont=$(fresh)
stderr=$(mktemp)
plash build -f $cont -x 'touch /a' 2> $stderr
test -s $stderr # its not empty
plash build -f $cont -x 'touch /a' 2> $stderr
(! test -s $stderr) # its empty

: multilayer caching
cont=$(fresh)
layer1=$(plash build -f $cont -x 'touch /a')
plash nodepath $newcont
layer2=$(plash build -f $layer1 -x 'touch /b')
test $(plash parent $layer2) = $layer1

# also check that in the filesystem
np1=$(plash nodepath $layer1)
np2=$(plash nodepath $layer2)
test $(basename $np1) = $(basename $(dirname $np2))

: working directory when builing is current workign directory at invocation 
tmp=$(mktemp -d)
cd /home
plash build -f 1 --invalidate-layer -x 'test $(pwd) == /home'
cd -

: home is mounted when building
cont=$(plash build -f 1 -x 'ls -1 /home > /tmp/out')
np=$(plash nodepath $cont)
cmp $np/_data/root/tmp/out <(ls -1 /home)

: tmp is not mounted when building
mktemp /tmp/XXXXXXXXXXX
cont=$(plash build -f 1 -x 'test -z $(ls /tmp)')

: build error returns bad exit code
cont=$(fresh)
set +e
plash build -f $cont -x 'exit 42'
test 1 -eq $? || exit 1
set -e

: nonexistent base container returns bad exit status
(! plash build -f 999)

: existent base container return success exit status
plash build -f 1

: build fail returns bad exit status and not container
stdout=$(mktemp)
(! plash build -f 1 -x false > $stdout)
(! test -s $stderr) # its empty

: bad option causes bad exit status
(! plash build --my-bad-opiton)
