#!/bin/sh
set -eux

testshrink(){
  plash shrink
  plash clean --clean-index
  out=$(ls $PLASH_DATA/index | xargs)
  test "$out" = "$(echo $@)"
  plash purge --yes
  plash init
  plash data touch config/testmode
}

mknode(){
  tmp=$(mktemp -d)
  plash add-layer "$1" "$tmp"
}

# start from zero
plash purge --yes
plash init
plash data touch config/testmode

: if called with one node delete it,
mknode 0
testshrink 0

: if called with no nodes, stay with no nodes
testshrink 0

: two simple nodes
mknode 0
mknode 0
testshrink 0 2

: create 2 containers with same parent
mknode 0
mknode 1
mknode 1
testshrink 0 1

: create 3 containers with same parent
mknode 0
mknode 1
mknode 1
mknode 1
testshrink 0 1 4

: create some containers, where each has one child - except the leave
mknode 0
mknode 1
mknode 2
mknode 3
testshrink 0 1 2

: create an older and a newer tree, ensure the older one gets deleted
tree_a=$(mknode 0)
child_a1=$(mknode "$tree_a")
child_a2=$(mknode "$tree_a")
tree_b=$(mknode 0)
child_b1=$(mknode "$tree_b")
child_b2=$(mknode "$tree_b")
testshrink 0 $tree_b $child_b1 $child_b2

: same as above but with an extra node in the second tree, this makes an extra node being deleted
tree_a=$(mknode 0)
child_a1=$(mknode "$tree_a")
child_a2=$(mknode "$tree_a")
tree_b=$(mknode 0)
child_b1=$(mknode "$tree_b")
child_b2=$(mknode "$tree_b")
child_b3=$(mknode "$tree_b")
testshrink 0 $tree_b $child_b2 $child_b3

: test with deferenced node
mknode 0
plash rm 1
testshrink 0
