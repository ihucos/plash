#!/bin/bash
set -eux

: executing program does not fail
plash runopts -c 1 true

: write fails if no changedir is specified
! plash runopts -c 1 touch /da

: can write if changedir specified
tmpdir=$(mktemp -d)
plash runopts -c 1 -d "$tmpdir" touch /da true

: does not fail if specified mountpoint does not exists
plash runopts -c 1 -m /doesnotexist -- true

: mounted file looks the same in host and container
tmp=$(mktemp)
changesdir=$(mktemp -d)
plash runopts -c 1 -d $changesdir -m /etc/passwd cat /etc/passwd > $tmp
cat $tmp
cmp /etc/passwd $tmp

: no mount namespace pollutions
new=$(plash create 1 ls)
before=$(cat /proc/mounts | grep "/index/$new" | wc -l)
plash runopts -c $new ls
after=$(cat /proc/mounts | grep "index/$new" | wc -l)
test $before = $after

: exit status is returned back
set +e
plash runopts -c 1 sh -c 'exit 123'
exit=$?
set -e
test $exit = 123

: error message is issued if the specified mount seems relative
out=$(plash runopts -c 1 -m relativepath 2>&1; true)
[[ "$out" = *"mount path must be absolute"* ]]

: current directory is mapped to container
cd /tmp
out=$(plash runopts -c 1 pwd)
test "$out" = $(pwd)
cd -

: environment variable is not just imported into container
out=$(MYENV=123 plash runopts -c 1 sh -c 'echo $MYENV')
test "$out" = ""

: environment variable is exposrted if specified in PLASH_EXPORT
out=$(PLASH_EXPORT=MYENV MYENV=123 V=a plash runopts -c 1 sh -c 'echo $MYENV$V')
test $out = "123"

: multiple environment variables in PLASH_EXPORT are all exported
out=$(PLASH_EXPORT='MYENV:V' V=a MYENV=123 plash runopts -c 1 sh -c 'echo $MYENV$V')
test $out = "123a"

: exit with 127 when the command is not found
set +e
out=$(plash runopts -c 1 mycmdnotfound 2>&1)
exit=$?
set -e
test "$exit" = 127

: environment variables can be passed as command argument
out=$(plash run 1 MYV=101 printenv MYV)
test "$out" = 101

: can run a layered container
new=$(plash create 1 true)
out=$(plash runopts -c $new echo hi)
test "$out" = hi

: shell is sarted if not command specified
test "$(echo 'echo iamshell' | plash runopts -c 1)" = iamshell

: specific error message is printed if no command specified
[[ "$(plash runopts -c 1 notexist 2>&1 1>/dev/null)" = *"notexist: command not found"* ]] 

: command that used like a environment variable is executed
[[ "$(plash runopts -c 1 VAR=1 2>&1 1>/dev/null)" = *"VAR=1: command not found"* ]] 
