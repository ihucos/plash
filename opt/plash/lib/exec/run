#!/usr/bin/env python3
#
# usage: plash run CONTAINER [ CMD1 [ CMD2 ... ] ]
#
# Run a container. If no command is specified, the containers default root
# shell is executed.
#
# The following host file systems are mapped to the container:
# - /tmp
# - /home
# - /root
# - /etc/resolv.conf
# - /sys
# - /dev
# - /proc
#
# If you want more control about how the container is run, use `plash runopts`
#
# Parameters may be interpreted as build instruction.

import os
import sys

from plash import utils

try:
    container_id, *cmd = sys.argv[1:]
except ValueError:
    utils.die_with_usage()


# use with login shell
if cmd:
    cmd = ["sh", "-lc", 'exec env "$@"', "--"] + cmd

changesdir = utils.plash_call("mkdtemp")

# This is practical to run nested plash instances with the same
# PLASH_DATA
os.environ['PLASH_DATA'] = utils.plash_call("data")

utils.plash_exec(
    "runopts",
    *(
        (
            "-c",
            container_id,
            "-d",
            changesdir,
            "-m",
            "/tmp",
            "-m",
            "/home",
            "-m",
            "/root",
            "-m",
            "/etc/resolv.conf",
            "-m",
            "/sys",
            "-m",
            "/dev",
            "-m",
            "/proc",
            "--",
        )
        + tuple(cmd)
    )
)
