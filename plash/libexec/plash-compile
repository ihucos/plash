#!/usr/bin/env python3

from plash import utils
from plash.eval import get_hint_values
import sys
import subprocess
import shlex

progname = sys.argv[1]
build_args = sys.argv[2:]
assert build_args

with utils.catch_and_die([subprocess.CalledProcessError], silent=True):
        build_shell_script = subprocess.check_output(['plash-eval'] + build_args).decode()

hint_values = get_hint_values(build_shell_script)
image_url = dict(hint_values)['image-url']
entrypoint = dict(hint_values)['exec']


sh_script = """
#!/bin/sh
set -eux

#################
# Autogenerated #
#################

# constants
IMAGEURL={imageurl}
EXEC={exec}
PROGNAME={progname}
DATADIR={datadir}
BINDIR={bindir}
BUILDSCRIPT={buildscript}

BINSCRIPT="#!/bin/sh

unshare --mount sh -c '
mount --rbind /tmp  {datadir}/{progname}/tmp
mount --rbind /home {datadir}/{progname}/home
mount --rbind /root {datadir}/{progname}/root
mount --rbind /sys  {datadir}/{progname}/sys
mount --rbind /dev  {datadir}/{progname}/dev
mount --rbind /proc {datadir}/{progname}/proc
mount --bind /etc/resolv.conf {datadir}/{progname}/etc/resolv.conf

exec chroot {datadir}/{progname} {exec} \"\$@\"
'
" # need better escaping XXX

mkdir -p {datadir}/{progname} || true
chmod 700 {datadir}/{progname} # this directory could include suid binaries and binaries mapped to existing system users
curl -fL "{imageurl}" | tar -xzf - -C {datadir}/{progname}

# so a possible symlink does not confuse mounting over it
rm    {datadir}/{progname}/etc/resolv.conf || true
touch {datadir}/{progname}/etc/resolv.conf || true

unshare --mount sh -c "
mount --rbind /home {datadir}/{progname}/home
mount --rbind /root {datadir}/{progname}/root
mount --rbind /sys  {datadir}/{progname}/sys
mount --rbind /dev  {datadir}/{progname}/dev
mount --rbind /proc {datadir}/{progname}/proc
mount --bind /etc/resolv.conf {datadir}/{progname}/etc/resolv.conf

echo {buildscript} | chroot {datadir}/{progname} sh
"

echo "$BINSCRIPT" > {bindir}/{progname}
chmod 700          {bindir}/{progname}
""".format(
imageurl=shlex.quote(image_url),
exec=shlex.quote(entrypoint),
progname=shlex.quote(progname),
datadir='/opt/plash-compile',
bindir='/usr/local/bin',
buildscript=shlex.quote(build_shell_script),
)

print(sh_script)
