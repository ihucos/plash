#!/usr/bin/env python3
#
# usage: plash distribute CONTAINER EXPORT1 [ EXPORT2 [ EXPORT3 ..] OUTFILE
#
from plash import utils
from plash import unshare
import tarfile
import sys
import os
import subprocess
import uuid
import argparse
import shutil

COLLECT_FROM = ['/usr/local/bin', '/usr/bin', '/bin']
RUNPROG = '/home/ihucos/plash/run'


utils.handle_build_args()
unshare.unshare_if_root()
unshare.unshare_if_user()

parser = argparse.ArgumentParser(description='Distribute containers')
parser.add_argument('container')
parser.add_argument('out')
parser.add_argument('--export', action='append', default=[])
parser.add_argument('--name')

args = parser.parse_args()

if not args.name:
    distname = 'mydist-{}'.format(uuid.uuid4().hex)
else:
    distname = args.name
package_main_dir = os.path.join('./opt', distname)

archive=utils.mkdtemp()
rootfs = os.path.join(archive, 'rootfs')
os.mkdir(rootfs)
os.mkdir(os.path.join(archive, 'bin'))
shutil.copy(RUNPROG, os.path.join(archive, 'run'))

with utils.catch_and_die([subprocess.CalledProcessError], silent=True):
    subprocess.check_call(['plash-shallow-copy', args.container, rootfs])

for collect_path in COLLECT_FROM:
    bins = os.path.join(rootfs, collect_path.lstrip('/'))
    try:
        bfiles = os.listdir(bins)
    except FileNotFoundError:
        continue
    for bfile in bfiles:
        dst = os.path.join(archive, 'bin', bfile)
        os.symlink(os.path.join(archive, 'run'), dst)

tar = tarfile.open(args.out, mode='w:bz2')
tar.add(archive, arcname=package_main_dir)
for e in args.export:
    tarinfo = tarfile.TarInfo('./usr/local/bin/{}'.format(e))
    tarinfo.type = tarfile.SYMTYPE
    tarinfo.linkname = os.path.join('/opt', distname, 'run')
    tar.addfile(tarinfo)
tar.close()
