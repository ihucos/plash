#!/usr/bin/env python3
#
# usage: plash distribute CONTAINER EXPORT1 [ EXPORT2 [ EXPORT3 ..] OUTFILE
#
from plash import utils
from plash import unshare
import tarfile
import sys
import os
import subprocess
import uuid

DEFAULT_RUN_SCRIPT = """#!/bin/sh
set -eu
thisfile=$(readlink "$0")
progname=$(basename "$0")
rootfs=$(dirname "$thisfile")

script='
rootfs=$1; shift
progname=$1; shift
mount --rbind /tmp  "$rootfs"/tmp
mount --rbind /home "$rootfs"/home
mount --rbind /root "$rootfs"/root
mount --rbind /sys  "$rootfs"/sys
mount --rbind /dev  "$rootfs"/dev
mount --rbind /proc "$rootfs"/proc
mount --bind /etc/resolv.conf "$rootfs"/etc/resolv.conf
exec chroot "$rootfs" $progname "$@"
'
if [ "$(id -u)" = 0 ]; then
    extra=""
else
  extra='--user --map-root'
fi

exec unshare --mount $extra env -i sh -euc "$script" -- "$rootfs" "$progname" "$@"

"""

utils.handle_build_args()
unshare.unshare_if_root()
unshare.unshare_if_user()

if not len(sys.argv[1:]) >= 3:
    utils.die_with_usage()

container = sys.argv[1]
export = sys.argv[2:-1]
outfile = sys.argv[-1]

rand = utils.hashstr(os.urandom(128))[:12]
package_main_dir = '/opt/plash-dist:{}:{}/'.format(rand, ':'.join(export))

mountpoint = os.path.join(utils.get_plash_data(), 'mnt')
changesdir = utils.mkdtemp()

with utils.catch_and_die([subprocess.CalledProcessError], silent=True):
    subprocess.check_call(['plash-mount', container, mountpoint, changesdir])

with open(os.path.join(mountpoint, '.run'), 'x') as f:
    f.write(DEFAULT_RUN_SCRIPT)
os.chmod(os.path.join(mountpoint, '.run'), 0o755)

tar = tarfile.open(outfile, mode='w:bz2')
tar.add(mountpoint, arcname=package_main_dir)
for e in export:
    tarinfo = tarfile.TarInfo('usr/local/bin/{}'.format(e))
    tarinfo.type = tarfile.SYMTYPE
    tarinfo.linkname = os.path.join(package_main_dir, '.run')
    tar.addfile(tarinfo)
tar.close()
